<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: poole | dponrails]]></title>
  <link href="http://davidpatrick.github.io/blog/categories/poole/atom.xml" rel="self"/>
  <link href="http://davidpatrick.github.io/"/>
  <updated>2014-09-16T14:13:54-07:00</updated>
  <id>http://davidpatrick.github.io/</id>
  <author>
    <name><![CDATA[David Patrick]]></name>
    <email><![CDATA[batreyud@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Starting a Blog with Jekyll]]></title>
    <link href="http://davidpatrick.github.io/blog/2014/09/15/starting-a-blog-with-jekyll/"/>
    <updated>2014-09-15T10:47:00-07:00</updated>
    <id>http://davidpatrick.github.io/blog/2014/09/15/starting-a-blog-with-jekyll</id>
    <content type="html"><![CDATA[<p>When searching where to host our team’s blog we wanted to stay close to the community that we were trying to give back to. <a href="http://pages.github.com/">Github Pages</a> immediately stood out and with the cost of $0 it’s perfect.  Github Pages allows us to keep using the same tools we use everyday in Development for Blogging.</p>

<!-- more -->


<h2>Where to Start?</h2>

<p>The first thing you will want to do is choose a static site generator.  To make it easy for you I’ve read through quite a bit material and the top 2 imo are:</p>

<ul>
<li>jekyll (ruby)</li>
<li>cabin (javascript)</li>
</ul>


<p>Both have their advantages but since I need some material for the next Ruby Meetup we are going to start this blog with using Jekyll.</p>

<h2>Getting Started</h2>

<p><a href="https://pages.github.com/">Github Pages</a> is straight forward and easy to follow.</p>

<p><a href="http://jekyllrb.com/">Jekyll</a>  is even easier to install
 <code>gem install jekyll</code></p>

<p>There are a ton of resources and tools from here to get you started with Jekyll.  One of the most common is <a href="http://octopress.org/">Octopress</a>.  But I like starting from something even more basic.  That’s where I found <a href="https://github.com/poole/poole">Poole</a>.</p>

<p>Even more so let’s start from one of its themes <a href="https://github.com/poole/hyde">Hyde</a>. Download the <a href="https://github.com/poole/hyde/archive/master.zip">source code</a> and extract it into our new project.</p>

<p>Let’s take a look at the file structure.  You will see some files/folders with underscores.  Every thing without an underscore will get copied into to the _site folder on build.</p>

<p>If you open up /_layouts/post.html  you will see handlebars used for injecting content.  This is using the <a href="http://liquidmarkup.org/">Liquid Markup Language</a>.</p>

<h3>Configuring Poole</h3>

<p>There are few things we will need to do configure Poole</p>

<ul>
<li><p>First, unelss you are using a custom domain is to remove the CNAME file, otherwise edit it with your domain.</p></li>
<li><p>Second, let’s set customize the _config.yml to fit our blog.</p></li>
<li><p>Third, remove the default blog posts under the _posts folder and write your our first post.</p></li>
</ul>


<p>That’s it! You can preview the blog  with <code>jekyll serve</code> and visiting <code>htpp://localhost:4000/</code>  If you&rsquo;re happy with the way everything looks run <code>jekyll build</code> commit your changes and push!</p>

<p>You can add <a href="https://help.disqus.com/customer/portal/articles/472138-jekyll-installation-instructions">Disqus Comments</a> and customize it a ton of different ways. Good luck!</p>
]]></content>
  </entry>
  
</feed>
