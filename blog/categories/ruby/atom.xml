<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | dponrails]]></title>
  <link href="http://davidpatrick.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://davidpatrick.github.io/"/>
  <updated>2014-09-17T22:45:09-07:00</updated>
  <id>http://davidpatrick.github.io/</id>
  <author>
    <name><![CDATA[David Patrick]]></name>
    <email><![CDATA[batreyud@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Jekyll Blogging with Octopress]]></title>
    <link href="http://davidpatrick.github.io/blog/2014/09/16/jekyll-blogging-with-octopress/"/>
    <updated>2014-09-16T11:03:54-07:00</updated>
    <id>http://davidpatrick.github.io/blog/2014/09/16/jekyll-blogging-with-octopress</id>
    <content type="html"><![CDATA[<p>In my first <a href="/blog/2014/09/15/starting-a-blog-with-jekyll">blog post</a>, I talked about using Jekyll with Poole.  After installing some plugins and customizing the theme, I realized the <a href="http://octopress.org/">Octopress</a> community has already done a lot of these things.  So let&rsquo;s give it a shot and see if it can save us some time.</p>

<pre><code>git clone git://github.com/imathis/octopress.git project-name
cd octopress
bundle install
rake install
</code></pre>

<p>Customize <code>./_config.yml</code> for your blog.</p>

<p>If you&rsquo;ve followed the original post starting with Poole, or have previous posts in markdown format, copy them over to <code>./source/_posts/</code></p>

<!-- more -->


<h2>What Octopress give us</h2>

<p>After installing Octopress, I immediately notice that it gives us a lot of&hellip; bloat. There are a ton of preinstalled plugins in Octopress and probably won&rsquo;t end up using half of them.  You will notice that the folder structure is very heavy compared to Poole or a plain Jekyll setup.  However Octopress does have some decent themes and a couple plugins I am going to utilize.</p>

<p>To create a live-reload session with our site let&rsquo;s go ahead and boot up the preview and see what our blog looks like
  <code>rake preview</code></p>

<p>Now let&rsquo;s create our first post in Octopress with it&rsquo;s included rake task</p>

<pre><code>rake new_post["Jekyll Blogging with Octopress"]
</code></pre>

<p>If we look at the generated post it gives us comments and categories arlready built in.  It also generates the file name and time for us.</p>

<pre><code>---
layout: post
title: "Jekyll Blogging with Octopress"
date: 2014-09-15 11:03:54 -0700
comments: true
categories: 
---
</code></pre>

<h2>Installing an Octopress Theme</h2>

<p>There is a <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">huge list</a> of themes to choose from.  The one that I will be using is <a href="https://github.com/shashankmehta/greyshade">greyshade</a>.  To install it, in the root of our project we run
<code>
git clone git@github.com:shashankmehta/greyshade.git .themes/greyshade
rake "install[greyshade]"
rake generate
</code>
And refresh our blog and you will see your newly installed theme.</p>

<h2>Deploying Octopress Generated Content</h2>

<p>Unfortunately Deploying with Octopress is not as easy as it was with Poole.  Since Octopress is a local Ruby Blogging Engine, we aren&rsquo;t going to commit all the code in our Octopress folder.  We actually need to set up our repo in a rake command <code>rake setup_github_pages</code></p>

<p>This will ask us for our github pages repo and initialize that repo into <code>/_deploy</code>.  If you are converting an existing repo, like I am, you are going to have a ton of merge conflicts.  Octopress doesn&rsquo;t push markdown files like a plain Jekyllrb install would, it generates html pages that it pushes&hellip;  This means it is basically going to wipe out our whole repo if we were using straight Jekyll.</p>

<p>After you have finished with that mess let&rsquo;s go ahead and deploy the code to Github using</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>This will generate our html and commit and push our code to the repo for us.</p>

<h2>Final Conclusions</h2>

<p>Octopress give us a lot of free stuff for a relatively cheap investment.  However, even after all it gives us, it adds a layer of complexity that is dirty when comparing to something as simple and elegant as Poole or just plain old Jekyllrb itself.</p>

<p>With Jekyllrb/Poole we are able to write all of our posts in markdown files and push the markdown files to our repo. This makes accessing the blog from different machines, or even remotely, A BREEZE! We can edit the markdown directly on github!  It also had a simple beauty to it when you looked at the source on Github.</p>

<p>With Octopress we have to run rake tasks that convert our markdown pages to html and then we have to run a deploy script to commit our changes.  This also adds a complexity of setting up your Octopress engine on a <a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">second machine</a>.</p>

<p>I am not a big fan of Octopress, but at the time as I write this blog I am still using it. However I plan to switch back to plain old vanilla Jekyllrb.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Starting a Blog with Jekyll]]></title>
    <link href="http://davidpatrick.github.io/blog/2014/09/15/starting-a-blog-with-jekyll/"/>
    <updated>2014-09-15T10:47:00-07:00</updated>
    <id>http://davidpatrick.github.io/blog/2014/09/15/starting-a-blog-with-jekyll</id>
    <content type="html"><![CDATA[<p>When searching where to host our team’s blog we wanted to stay close to the community that we were trying to give back to. <a href="http://pages.github.com/">Github Pages</a> immediately stood out and with the cost of $0 it’s perfect.  Github Pages allows us to keep using the same tools we use everyday in Development for Blogging.</p>

<h2>Where to Start?</h2>

<p>The first thing you will want to do is choose a static site generator.  To make it easy for you I’ve read through quite a bit material and the top 2 imo are:</p>

<ul>
<li>jekyll (ruby)</li>
<li>cabin (javascript)</li>
</ul>


<p>Both have their advantages but since I need some material for the next Ruby Meetup we are going to start this blog with using Jekyll.</p>

<!-- more -->


<h2>Getting Started</h2>

<p><a href="https://pages.github.com/">Github Pages</a> is straight forward and easy to follow.</p>

<p><a href="http://jekyllrb.com/">Jekyll</a>  is even easier <code>gem install jekyll</code></p>

<p>There are a ton of resources and tools from here to get you started with Jekyll.  One of the most common is <a href="http://octopress.org/">Octopress</a>.  But I like starting from something even more basic.  That’s where I found <a href="https://github.com/poole/poole">Poole</a>.</p>

<p>Let&rsquo;s start with one of their themes <a href="https://github.com/poole/lanyon">Hyde</a>. To start the new project let&rsquo;s clone their repo <code>git clone https://github.com/poole/lanyon.git project-name</code></p>

<h3>Configuring Poole</h3>

<p>There are few things we will need to do configure Poole</p>

<ul>
<li><p>First, unelss you are using a custom domain is to remove the CNAME file, otherwise edit it with your domain.</p></li>
<li><p>Second, let’s set customize <code>./_config.yml</code> to fit your blog.</p></li>
<li><p>Third, follow the format in the  <code>./_posts/</code> folder to write your first post.</p></li>
</ul>


<p>That’s it! You can preview the blog  with <code>jekyll serve</code> and visiting <code>htpp://localhost:4000/</code>  If you&rsquo;re happy with the way everything looks run <code>jekyll build</code> commit your changes and push to your repo!</p>

<p>You can add <a href="https://help.disqus.com/customer/portal/articles/472138-jekyll-installation-instructions">Disqus Comments</a> and customize it a ton of different ways. Good luck!</p>
]]></content>
  </entry>
  
</feed>
